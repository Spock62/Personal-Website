#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

compile '/assets/*' do
  # don’t filter or layout
end

compile '/presentations/*' do

  ext = item[:extension].nil? ? nil : item[:extension].split('.').last

  if rep.item.attributes[:filename] == "content/presentations/index.html"
    filter :erb
    layout 'default'
  else
    if ext == 'haml'
      filter :haml
      filter :colorize_syntax
      layout 'presentation'
    else
      filter :colorize_syntax
      layout 'presentation'
    end
  end
end

compile '*' do

  ext = item[:extension].nil? ? nil : item[:extension].split('.').last

  if item.binary?
    # don’t filter binary items
  elsif ext == 'md' || ext == 'markdown'
    filter :erb
    filter :rdiscount
    layout 'default'
  else
    filter :erb
    layout 'default'
  end
end

route '/assets/stylesheets/*' do
  '/assets/stylesheets/' + rep.item.attributes[:filename].split('/').last
end

route '/assets/javascripts/*' do
  '/assets/javascripts/' + rep.item.attributes[:filename].split('/').last
end

=begin
route '/blog/*' do
  if not rep.item.attributes[:filename] == "content/blog/index.html"
    '/blog/' + rep.item.attributes[:title].gsub(/ /, '_').
    downcase + ".html"
  else
    '/blog/index.html' 
  end
end

route '/projects/*' do
  if not rep.item.attributes[:filename] == "content/projects/index.html"
    '/projects/' + rep.item.attributes[:title].gsub(/ /, '_').
    downcase + ".html"
  else
    '/projects/index.html' 
  end
end

route '/playground/*' do
  if not rep.item.attributes[:filename] == "content/playground/index.html"
    '/playground/' + rep.item.attributes[:title].gsub(/ /, '_').
    downcase + ".html"
  else
    '/playground/index.html' 
  end
end
=end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :erb
